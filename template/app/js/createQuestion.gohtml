{{ define "js/createQuestion" }}
document.addEventListener("DOMContentLoaded", event => {
    const fileName = document.getElementById("fileName");
    const question = document.getElementById("question");
    const choicesDiv = document.getElementById("choicesDiv");
    const createChoices = document.getElementById("createChoices");

    createChoices.addEventListener("click", event => {
        choicesDiv.appendChild(
            makeChoices(document.getElementById("choices").value)
            );
        createChoices.setAttribute("disabled", "disabled");
        document.getElementById("addQuestion").disabled = false;
    });

    document.getElementById("gameAndFilenameForm").addEventListener("submit", event => {
        const xhr = getXHR("POST", "add_game");
        xhr.onload = () => {
            if (xhr.status === 200) {
                resp = JSON.parse(xhr.response);
                if (!resp.success) {
                    debugger;
                } else {
                    alert("Game and file created.");
                    document.getElementById("addGameAndFilename").disabled = "true";
                }
            }
        };
        xhr.send(JSON.stringify({
            name: document.getElementById("gameName").value,
            filename: fileName.value
        }));
        event.preventDefault();
    });

    document.getElementById("questionsForm").addEventListener("submit", event => {
        checked = choicesDiv.querySelectorAll("input[type=checkbox]:checked")
        if (!checked.length) {
            alert("You need to mark at least one choice as correct.");
        } else {
            const xhr = getXHR("POST", "question");
            xhr.onload = () => {
                if (xhr.status === 200) {
                    resp = JSON.parse(xhr.response);
                    if (!resp.success) {
                        debugger;
                    } else {
                        alert("Way to go, message received.");
                        choicesDiv.innerHTML = "";
                        question.value = "";
                        createChoices.disabled = false;
                    }
                }
            };
            xhr.send(JSON.stringify({
                filename: fileName.value,
                name: question.value,
                weight: parseInt(document.getElementById("weight").value, 10),
                answer: Array.from(checked).reduce(
                    (acc, curr) => {
                        acc.push(parseInt(curr.id.slice(-1), 10) + 1);
                        return acc;
                    }, []),
                choices: Array.from(choicesDiv.querySelectorAll("input[type=text]")).reduce(
                    (acc, curr) => {
                        acc.push(curr.value);
                        return acc;
                    }, [])
            }));
        }
        event.preventDefault();
    });

    /*
    viewGame.addEventListener("click", event => {
        const xhr = getXHR("GET", "view");
        xhr.onload = () => {
            if (xhr.status === 200) {
                resp = JSON.parse(xhr.response);
                let questions = [];
                resp.forEach(q => {
                    let entry = [];
                    entry.push(q.name, q.weight, q.answer.join(","));
                    q.choices.reduce((acc, curr) => {
                        acc.push(curr);
                        return acc;
                    }, entry);
                    questions.push(entry.join("|"));
                });
                viewGameResults.innerHTML = questions.join("<br>");
            }
        };
        xhr.send(null);
    });
    */
});
{{ end }}

